#include<stdio.h>
#include<stdlib.h>
struct node
{
	int value;
	struct node *next;
};
typedef struct node *NODE;

NODE getnode()
{
	NODE temp;
	temp=(NODE)malloc(sizeof(struct node));
	if(temp==NULL)
	{
		printf("Memory not allocated");
		return NULL;
	}
	return temp;
}

NODE insert_beg(NODE first,int item)
{
	NODE new;
	new=getnode();
	new->value=item;
	new->next=NULL;
	if(first==NULL)
	{
		return new;
	}
	else
	{
		new->next=first;
		first=new;
		return first;
	}
}

NODE del_beg(NODE first)
{
	NODE temp;
	if(first==NULL)
	{
		printf("list is empty\n");
		return first;
	}
	temp=first;
	temp=temp->next;
	printf("Item deleted =%d",first->value);
	free(first);
	return temp;
	
}

void display(NODE first)
{
	NODE temp;
	temp=first;
	if(first==NULL)
	{
		printf("List is empty\n");
	}
	while(temp!=NULL)
	{
		printf("Value stored in the node=%d\n",temp->value);
		temp=temp->next;
	}
	
}

int main()
{
    int op,item;
    NODE first=NULL;

    while(1)
    {
        printf("\nEnter the operation\n 1.PUSH  2. POP  3. DISPLAY\n");
        scanf("%d", &op);
        
        switch(op)
        {
            case 1: printf("Enter the number : ");
                    scanf("%d", &item);
                    first=insert_beg(first,item);
                    break;
                    
            case 2: del_beg(first);
                    break;
                   
            case 3: display(first);
                    break;
                    
            default: printf("Invalid input\n\n");        
                     break;   
        }
    }
    
    return 0;
}